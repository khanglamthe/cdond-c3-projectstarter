jobs:
  build-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          key: [frontend-build]
      - run:
        name: lint frontend
        command: |
          cd frontend
          npm install
          npm run build
      - save_cache:
        path: [frontend/node_mudules]
        key: frontend-build
  build-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          key: [backend-build]
      - run:
        name: lint backend
        command: |
          cd backend
          npm install
          npm run build
      - save_cache:
        path: [backend/node_mudules]
        key: backend-build
  test-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          key: [frontend-test]
      - run:
        name: run test frontend
        command: |
          cd frontend
          npm install
          npm run test
  test-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          key: [backend-test]
      - run:
        name: run test backend
        command: |
          cd backend
          npm install
          npm run test
  scan-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          key: [frontend-scan]
      - run:
        name: run scan frontend
        command: |
          cd frontend
          npm install
          # npm install oauth-sign@^0.9.0
          npm audit --audit-level=critical
  scan-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          key: [backend-scan]
      - run:
        name: run scan backend
        command: |
          cd backend
          npm install
          # npm install oauth-sign@^0.9.0
          npm audit --audit-level=critical
workflows:
  default:
    jobs:
      - build-frontend
      - build-backend
      - test-frontend:
          requires: [build-frontend]
      - test-backend:
          requires: [build-backend]
      - scan-frontend:
          requires: [build-frontend]
      - scan-backend:
          requires: [build-backend]
